{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-8b352240\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"head\", null, [/*#__PURE__*/_createElementVNode(\"meta\", {\n  charset: \"utf-8\"\n}), /*#__PURE__*/_createElementVNode(\"title\", null, \"信息登记表\")], -1 /* HOISTED */));\nconst _hoisted_2 = {\n  class: \"bg\"\n};\nconst _hoisted_3 = {\n  action: \"#\",\n  method: \"get\",\n  autocomplete: \"off\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"信息登记表\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_createStaticVNode(\"<br data-v-8b352240><br data-v-8b352240><br data-v-8b352240><p data-v-8b352240><span data-v-8b352240>真实姓名：</span><!-- 在下面的横线中填写`必填属性`和`自动聚焦` --><input type=\\\"text\\\" name=\\\"real_name\\\" placeholder=\\\"请务必填写真实姓名\\\" required autofocus data-v-8b352240></p><br data-v-8b352240><p data-v-8b352240><span data-v-8b352240>真实年龄：</span><!-- 在下面的横线中填写`最大值属性`和`最小值属性` --><input type=\\\"number\\\" name=\\\"real_age\\\" value=\\\"\\\" max=\\\"100\\\" min=\\\"0\\\" required data-v-8b352240></p><br data-v-8b352240><p data-v-8b352240><span data-v-8b352240>出生日期：</span><!-- 在下面的横线中填写`type的日期类型` --><input type=\\\"date\\\" name=\\\"birthday\\\" value=\\\"2000-07-22\\\" required data-v-8b352240><!-- （必须填写） --></p><br data-v-8b352240><p data-v-8b352240><span data-v-8b352240>是否已婚：</span><input type=\\\"date\\\" name=\\\"birthday\\\" value=\\\"2000-07-22\\\" required data-v-8b352240><!-- （必须填写） --></p><br data-v-8b352240><p data-v-8b352240><span data-v-8b352240>身份证号：</span><input type=\\\"number\\\" name=\\\"idnumber\\\" value=\\\"\\\" max=\\\"999999999999999999\\\" min=\\\"100000000000000000\\\" required data-v-8b352240></p><br data-v-8b352240>\", 13);\nconst _hoisted_19 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, [/*#__PURE__*/_createElementVNode(\"span\", null, \"出生日期：\"), /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"date\",\n  name: \"birthday\",\n  value: \"2000-07-22\",\n  required: \"\"\n}), /*#__PURE__*/_createCommentVNode(\" （必须填写） \")], -1 /* HOISTED */));\nconst _hoisted_20 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_21 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_22 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_23 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"btn\"\n}, [/*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"submit\",\n  value: \"提交\"\n}), /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"reset\",\n  value: \"重置\"\n})], -1 /* HOISTED */));\n\nexport function render(_ctx, _cache) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  return _openBlock(), _createElementBlock(\"html\", null, [_hoisted_1, _createElementVNode(\"body\", null, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"form\", _hoisted_3, [_hoisted_4, _hoisted_5, _createCommentVNode(\"<p><span>用户登录：</span>\\r\\n      在下面的横线中填写`禁用属性`和`只读属性` \\r\\n     <input type=\\\"text\\\" name=\\\"user_name\\\" value=\\\"myemail@163.com\\\" disabled readonly/>\\r\\n    </p>\"), _hoisted_6, _createVNode(_component_el_form_item, {\n    label: \"身份证号\",\n    prop: \"idCard\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_input, {\n      modelValue: _ctx.ruleForm.idCard,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.ruleForm.idCard = $event),\n      placeholder: \"请输入身份证号\",\n      onBlur: _cache[1] || (_cache[1] = $event => _ctx.getName(_ctx.ruleForm.idCard))\n    }, null, 8 /* PROPS */, [\"modelValue\"])]),\n    _: 1 /* STABLE */\n  }), _hoisted_19, _hoisted_20, _createCommentVNode(\" <p><span>个人主页：</span>\\r\\n     在下面的横线中填写input标签的`引用数据列表属性`\\r\\n     <input type=\\\"url\\\" name=\\\"myurl\\\"  list=\\\"urllist\\\" placeholder=\\\"http://www.sdlfc.com\\\"/>\\r\\n     <datalist id=\\\"urllist\\\">\\r\\n      <option>http://www.baidu.cn</option>\\r\\n      <option>http://www.sina.com</option>\\r\\n      <option>http://www.w3school.com.cn</option>\\r\\n     </datalist>\\r\\n    </p> \"), _hoisted_21, _hoisted_22, _hoisted_23])])])]);\n}","map":{"version":3,"mappings":";;gEAGCA,oBAGO,4BAFNA,oBAAsB;EAAhBC,OAAO,EAAC;AAAO,iBACrBD,oBAAoB,eAAb,OAAK;;EAGPE,KAAK,EAAC;AAAI;;EACRC,MAAM,EAAC,GAAG;EAACC,MAAM,EAAC,KAAK;EAACC,YAAY,EAAC;;gEAC1CL,oBAAM;gEACNA,oBAAc,YAAV,OAAK;;iEAgCTA,oBAEI,yBAFDA,oBAAkB,cAAZ,OAAK,gBACbA,oBAAiE;EAA1DM,IAAI,EAAC,MAAM;EAACC,IAAI,EAAC,UAAU;EAAEC,KAAK,EAAC,YAAY;EAACC,QAAQ,EAAR;iBAAUC,+BAAe;iEAEjFV,oBAAM;iEAUNA,oBAAM;iEAAAA,oBAAM;iEACZA,oBAGI;EAHDE,KAAK,EAAC;AAAK,iBACbF,oBAAkC;EAA3BM,IAAI,EAAC,QAAQ;EAACE,KAAK,EAAC;iBAC3BR,oBAAiC;EAA1BM,IAAI,EAAC,OAAO;EAACE,KAAK,EAAC;;;;;;uBAzD/BG,oBA8DO,eA7DNC,UAGO,EACPZ,oBAwDO,eAvDNA,oBAsDM,OAtDNa,UAsDM,GArDLb,oBAoDO,QApDPc,UAoDO,GAnDNC,UAAM,EACNC,UAAc,EACdN,uLAGO,EACPO,UAAM,EAwBNC,aAEYC;IAFEC,KAAK,EAAC,MAAM;IAACC,IAAI,EAAC;;sBAC/B,MAAsG,CAAtGH,aAAsGI;kBAAnFC,aAAQ,CAACC,MAAM;iEAAfD,aAAQ,CAACC,MAAM;MAAEC,WAAW,EAAC,SAAS;MAAEC,MAAI,sCAAEH,YAAO,CAACA,aAAQ,CAACC,MAAM;;;MAEzFG,WAEI,EACJC,WAAM,EACNlB,yYAQQ,EACRmB,WAAM,aAAM,EACZC,WAGI","names":["_createElementVNode","charset","class","action","method","autocomplete","type","name","value","required","_createCommentVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_createVNode","_component_el_form_item","label","prop","_component_el_input","_ctx","idCard","placeholder","onBlur","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_23"],"sourceRoot":"","sources":["D:\\github_local\\Physical-Examination-System\\test\\src\\pages\\WriteInfor\\MyIndex.vue"],"sourcesContent":["\r\n<template>\r\n<html>\r\n <head>\r\n  <meta charset=\"utf-8\">\r\n  <title>信息登记表</title>\r\n </head>\r\n <body>\r\n  <div class=\"bg\">\r\n   <form action=\"#\" method=\"get\" autocomplete=\"off\">\r\n    <br />\r\n    <h2>信息登记表</h2>\r\n    <!--<p><span>用户登录：</span>\r\n      在下面的横线中填写`禁用属性`和`只读属性` \r\n     <input type=\"text\" name=\"user_name\" value=\"myemail@163.com\" disabled readonly/>\r\n    </p>-->\r\n    <br /><br /><br />\r\n    <p><span>真实姓名：</span>\r\n    <!-- 在下面的横线中填写`必填属性`和`自动聚焦` -->\r\n     <input type=\"text\" name=\"real_name\" placeholder=\"请务必填写真实姓名\" required autofocus/>\r\n    </p>\r\n    <br />\r\n    <p><span>真实年龄：</span>\r\n     <!-- 在下面的横线中填写`最大值属性`和`最小值属性` -->\r\n     <input type=\"number\" name=\"real_age\" value=\"\"   max=\"100\"   min=\"0\" required/>\r\n    </p>\r\n    <br />\r\n    <p><span>出生日期：</span>\r\n     <!-- 在下面的横线中填写`type的日期类型` -->\r\n     <input type=\"date\" name=\"birthday\"  value=\"2000-07-22\" required/><!-- （必须填写） -->\r\n    </p>\r\n    <br />\r\n    <p><span>是否已婚：</span>\r\n     <input type=\"date\" name=\"birthday\"  value=\"2000-07-22\" required/><!-- （必须填写） -->\r\n    </p>\r\n    <br />\r\n    <p><span>身份证号：</span>\r\n     <input type=\"number\" name=\"idnumber\" value=\"\"   max=\"999999999999999999\"   min=\"100000000000000000\" required/>\r\n    </p>\r\n    <br />\r\n    <el-form-item label=\"身份证号\" prop=\"idCard\">\r\n     <el-input v-model=\"ruleForm.idCard\" placeholder=\"请输入身份证号\" @blur=\"getName(ruleForm.idCard)\"></el-input>\r\n </el-form-item>\r\n    <p><span>出生日期：</span>\r\n     <input type=\"date\" name=\"birthday\"  value=\"2000-07-22\" required/><!-- （必须填写） -->\r\n    </p>\r\n    <br />\r\n    <!-- <p><span>个人主页：</span>\r\n     在下面的横线中填写input标签的`引用数据列表属性`\r\n     <input type=\"url\" name=\"myurl\"  list=\"urllist\" placeholder=\"http://www.sdlfc.com\"/>\r\n     <datalist id=\"urllist\">\r\n      <option>http://www.baidu.cn</option>\r\n      <option>http://www.sina.com</option>\r\n      <option>http://www.w3school.com.cn</option>\r\n     </datalist>\r\n    </p> -->\r\n    <br /><br />\r\n    <p class=\"btn\">\r\n     <input type=\"submit\" value=\"提交\" />\r\n     <input type=\"reset\" value=\"重置\" />\r\n    </p>\r\n   </form>\r\n  </div>\r\n </body>\r\n</html>\r\n\r\n</template>\r\n  \r\n<script>\r\n\r\n</script>\r\n  \r\n<style scoped lang=\"less\">\r\n   input {\r\n    width:360px;\r\n    height:50px;                                 \r\n    border:1px solid #d4cdba;\r\n    padding:2px; \r\n    font-size: 17px;\r\n   }\r\n   h2 {\r\n      font-size: 50px;\r\n      color: #000000; \r\n      display : inline;\r\n      margin-left: 38%;\r\n      text-align: center;\r\n      padding-bottom: 20px;\r\n   }\r\n   span {\r\n      margin-left: 29%;\r\n      font-size: 20px\r\n   }\r\n   p {\r\n      height: 80px,\r\n   }\r\n   .btn {\r\n      input {\r\n         margin-left: 27%;\r\n      }\r\n   }\r\n   .btn input{\r\n    width:100px; \r\n    height:30px;\r\n    border-radius:3px;\r\n   }\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}